#!/bin/sh

commit="$(git log --oneline | head -n 1 | awk '{print $1}')"
date="$(date -Iseconds)"
user="yoshuawuyts"

run_build () {
  docker_projectname="$user/$1"
  docker build "$1" \
    -t "$docker_projectname:latest" \
    -t "$docker_projectname:$commit" \
    --label "date=$date" \
    --label "commit=$commit"
}

run_build_all () {
  for f in */Dockerfile; do
    dirname="$(echo "$f" | sed 's|/.*$||')"
    printf '[docker] building %s\n' "$dirname"
    run_build "$dirname"
    printf '\n\n'
  done
}

run_publish () {
  run_build "$@"
  docker_projectname="$user/$1"
  docker push "$docker_projectname:latest"
  docker push "$docker_projectname:$commit"
}

usage () {
  printf 'Usage: script/build [options]\n\n'
  printf 'Options:'
  printf '  -h help\n'
  printf '  -b build\n'
  printf '  -a build all\n'
  printf '  -o optimize\n'
  printf '  -p publish\n'
}

# set CLI flags
args="$(getopt paho "$*")"
[ $? -ne 0 ] && { usage; exit 2; }
eval set -- "$args"

# parse CLI flags
while true; do
  case "$1" in
    -h ) usage ;;
    -a ) shift; run_build_all "@"; break ;;
    -o ) shift; run_optimize "$@"; break ;;
    -p ) shift; run_publish "$@"; break ;;
    -b|* ) shift; run_build "$@"; break ;;
  esac
done
